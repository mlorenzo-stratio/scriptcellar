#!/bin/bash

SCRIPTNAME=$(basename $0)
MYDIR=$(dirname $0)
source $MYDIR/variables
source $MYDIR/functions
load_func_vars

usage(){
	cat << EOH
Usage:	$SCRIPTNAME <app> <start|stop|restart|kill|info>
        Provides Infinispan nodes management
EOH
}

infinispan_ctl(){ # Infinispan CTL
	if [ "$1" = "internal" ]; then
		local log_disabled="yes"
		shift
	fi
        local app=$1
        local action=$2
        local output
        local count=0
        if [ ! "$keep_output" ]; then rm -f $TMP ; fi
	#[ ! $log_disabled ] && log "Performing $action infinispan for $app"
        case $action in
                start|stop|kill|info)
        		servers=$(getServer $app 'infinispan')
                        local TOTAL=$(echo $servers | wc -w)
                        for server in $servers; do
				log -n "$action infinispan on $app@$server... "
				print_percent
                                _action=$action
                                output="$server\t$($DEBUG ssh $server $INFINISPAN_CTL $app $_action | tr -t '\n' '#' | tr -s '#')"
				if [ $? != 0 ]; then
					log -a "ERROR!!"
					log "output: $(echo -e $output | sed -e "s/^#Server info/Server info/" -e "s/#/\n\t/g")"
				else
					log -a "OK"
				fi
                                let count=count+1
				print_comment
                                echo -e $output | sed -e "s/^#Server info/Server info/" -e "s/#/\n\t/g" | tee -a $TMP
				print_comment
				print_percent
                        done
                ;;
                restart)
                        export keep_output="yes"
                        infinispan_ctl "internal" $app stop
                        sleep 1
                        infinispan_ctl "internal" $app start
                ;;
        esac
	#[ ! $log_disabled ] && log "Finished $action infinispan for $app"
}

listApps(){
        getISPNApps | while IFS=':' read app servers; do
                echo -e "\t- $app: $(echo $servers | sed -e "s/ /, /g" -e "s/ ,$//")"
        done
}

check_arg 1 "" $* || exit $?
app=$1
action=${2,,}

retrieve_configuration
case "$action" in
        start|stop|info|kill|restart) ;;
        *)              usage ; listApps ; exit $UNKNOWN_OPTION_SPECIFIED ;;
esac
if ! isApp $app; then
        usage
        echo -e "\nApp \`$app\` doesn't exist. Available apps are:"
        listApps
        exit $NON_EXISTANT_APP
fi
lock $app
infinispan_ctl $app $action
unlock $app
